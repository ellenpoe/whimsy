package norswap.uranium.java.model

// -------------------------------------------------------------------------------------------------

class TypeParameter (val name: String)
{
    var class_bound: Type? = null
    val interface_bounds = ArrayList<Type>()
}

// -------------------------------------------------------------------------------------------------

open class Type

// -------------------------------------------------------------------------------------------------

class PrimitiveType (val name: String): Type()

// -------------------------------------------------------------------------------------------------

open class ParameterizedType: Type()
{
    val type_arguments = ArrayList<Type>()
}

// -------------------------------------------------------------------------------------------------

// binary name
class ClassType (val name: String): ParameterizedType()

// -------------------------------------------------------------------------------------------------

// simple name
class InnerClassType (val outer: Type, val name: String): ParameterizedType()

// -------------------------------------------------------------------------------------------------

class TypeVariable (val name: String): Type()

// -------------------------------------------------------------------------------------------------

class ArrayType (val base_type: Type): Type()

// -------------------------------------------------------------------------------------------------

object Wildcard: Type()

// -------------------------------------------------------------------------------------------------

class SuperWildcard (val bound: Type): Type()

// -------------------------------------------------------------------------------------------------

class ExtendsWildcard (val bound: Type): Type()

// -------------------------------------------------------------------------------------------------